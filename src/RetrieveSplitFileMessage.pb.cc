// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RetrieveSplitFileMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Imagine_MapReduce/RetrieveSplitFileMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Imagine_MapReduce {
namespace Internal {

namespace {

const ::google::protobuf::Descriptor* RetrieveSplitFileRequestMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetrieveSplitFileRequestMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetrieveSplitFileResponseMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetrieveSplitFileResponseMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RetrieveSplitFileMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_RetrieveSplitFileMessage_2eproto() {
  protobuf_AddDesc_RetrieveSplitFileMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RetrieveSplitFileMessage.proto");
  GOOGLE_CHECK(file != NULL);
  RetrieveSplitFileRequestMessage_descriptor_ = file->message_type(0);
  static const int RetrieveSplitFileRequestMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrieveSplitFileRequestMessage, send_identity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrieveSplitFileRequestMessage, recv_identity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrieveSplitFileRequestMessage, split_file_name__),
  };
  RetrieveSplitFileRequestMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RetrieveSplitFileRequestMessage_descriptor_,
      RetrieveSplitFileRequestMessage::default_instance_,
      RetrieveSplitFileRequestMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(RetrieveSplitFileRequestMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrieveSplitFileRequestMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrieveSplitFileRequestMessage, _is_default_instance_));
  RetrieveSplitFileResponseMessage_descriptor_ = file->message_type(1);
  static const int RetrieveSplitFileResponseMessage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrieveSplitFileResponseMessage, send_identity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrieveSplitFileResponseMessage, recv_identity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrieveSplitFileResponseMessage, status__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrieveSplitFileResponseMessage, split_file_content__),
  };
  RetrieveSplitFileResponseMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RetrieveSplitFileResponseMessage_descriptor_,
      RetrieveSplitFileResponseMessage::default_instance_,
      RetrieveSplitFileResponseMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(RetrieveSplitFileResponseMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrieveSplitFileResponseMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetrieveSplitFileResponseMessage, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RetrieveSplitFileMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RetrieveSplitFileRequestMessage_descriptor_, &RetrieveSplitFileRequestMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RetrieveSplitFileResponseMessage_descriptor_, &RetrieveSplitFileResponseMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RetrieveSplitFileMessage_2eproto() {
  delete RetrieveSplitFileRequestMessage::default_instance_;
  delete RetrieveSplitFileRequestMessage_reflection_;
  delete RetrieveSplitFileResponseMessage::default_instance_;
  delete RetrieveSplitFileResponseMessage_reflection_;
}

void protobuf_AddDesc_RetrieveSplitFileMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_RetrieveSplitFileMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Imagine_MapReduce::Internal::protobuf_AddDesc_InternalType_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036RetrieveSplitFileMessage.proto\022\032Imagin"
    "e_MapReduce.Internal\032\022InternalType.proto"
    "\"\267\001\n\037RetrieveSplitFileRequestMessage\022<\n\016"
    "send_identity_\030\001 \001(\0162$.Imagine_MapReduce"
    ".Internal.Identity\022<\n\016recv_identity_\030\002 \001"
    "(\0162$.Imagine_MapReduce.Internal.Identity"
    "\022\030\n\020split_file_name_\030\003 \001(\t\"\360\001\n RetrieveS"
    "plitFileResponseMessage\022<\n\016send_identity"
    "_\030\001 \001(\0162$.Imagine_MapReduce.Internal.Ide"
    "ntity\022<\n\016recv_identity_\030\002 \001(\0162$.Imagine_"
    "MapReduce.Internal.Identity\0223\n\007status_\030\003"
    " \001(\0162\".Imagine_MapReduce.Internal.Status"
    "\022\033\n\023split_file_content_\030\004 \001(\tb\006proto3", 517);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RetrieveSplitFileMessage.proto", &protobuf_RegisterTypes);
  RetrieveSplitFileRequestMessage::default_instance_ = new RetrieveSplitFileRequestMessage();
  RetrieveSplitFileResponseMessage::default_instance_ = new RetrieveSplitFileResponseMessage();
  RetrieveSplitFileRequestMessage::default_instance_->InitAsDefaultInstance();
  RetrieveSplitFileResponseMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RetrieveSplitFileMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RetrieveSplitFileMessage_2eproto {
  StaticDescriptorInitializer_RetrieveSplitFileMessage_2eproto() {
    protobuf_AddDesc_RetrieveSplitFileMessage_2eproto();
  }
} static_descriptor_initializer_RetrieveSplitFileMessage_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetrieveSplitFileRequestMessage::kSendIdentityFieldNumber;
const int RetrieveSplitFileRequestMessage::kRecvIdentityFieldNumber;
const int RetrieveSplitFileRequestMessage::kSplitFileNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetrieveSplitFileRequestMessage::RetrieveSplitFileRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
}

void RetrieveSplitFileRequestMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RetrieveSplitFileRequestMessage::RetrieveSplitFileRequestMessage(const RetrieveSplitFileRequestMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
}

void RetrieveSplitFileRequestMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  send_identity__ = 0;
  recv_identity__ = 0;
  split_file_name__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RetrieveSplitFileRequestMessage::~RetrieveSplitFileRequestMessage() {
  // @@protoc_insertion_point(destructor:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
  SharedDtor();
}

void RetrieveSplitFileRequestMessage::SharedDtor() {
  split_file_name__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RetrieveSplitFileRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetrieveSplitFileRequestMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetrieveSplitFileRequestMessage_descriptor_;
}

const RetrieveSplitFileRequestMessage& RetrieveSplitFileRequestMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RetrieveSplitFileMessage_2eproto();
  return *default_instance_;
}

RetrieveSplitFileRequestMessage* RetrieveSplitFileRequestMessage::default_instance_ = NULL;

RetrieveSplitFileRequestMessage* RetrieveSplitFileRequestMessage::New(::google::protobuf::Arena* arena) const {
  RetrieveSplitFileRequestMessage* n = new RetrieveSplitFileRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetrieveSplitFileRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RetrieveSplitFileRequestMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RetrieveSplitFileRequestMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(send_identity__, recv_identity__);
  split_file_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool RetrieveSplitFileRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_send_identity_(static_cast< ::Imagine_MapReduce::Internal::Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_recv_identity_;
        break;
      }

      // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
      case 2: {
        if (tag == 16) {
         parse_recv_identity_:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_recv_identity_(static_cast< ::Imagine_MapReduce::Internal::Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_split_file_name_;
        break;
      }

      // optional string split_file_name_ = 3;
      case 3: {
        if (tag == 26) {
         parse_split_file_name_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_split_file_name_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->split_file_name_().data(), this->split_file_name_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.split_file_name_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
  return false;
#undef DO_
}

void RetrieveSplitFileRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
  // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->send_identity_(), output);
  }

  // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->recv_identity_(), output);
  }

  // optional string split_file_name_ = 3;
  if (this->split_file_name_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->split_file_name_().data(), this->split_file_name_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.split_file_name_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->split_file_name_(), output);
  }

  // @@protoc_insertion_point(serialize_end:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
}

::google::protobuf::uint8* RetrieveSplitFileRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
  // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->send_identity_(), target);
  }

  // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->recv_identity_(), target);
  }

  // optional string split_file_name_ = 3;
  if (this->split_file_name_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->split_file_name_().data(), this->split_file_name_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.split_file_name_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->split_file_name_(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
  return target;
}

int RetrieveSplitFileRequestMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
  int total_size = 0;

  // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->send_identity_());
  }

  // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->recv_identity_());
  }

  // optional string split_file_name_ = 3;
  if (this->split_file_name_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->split_file_name_());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetrieveSplitFileRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RetrieveSplitFileRequestMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RetrieveSplitFileRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
    MergeFrom(*source);
  }
}

void RetrieveSplitFileRequestMessage::MergeFrom(const RetrieveSplitFileRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.send_identity_() != 0) {
    set_send_identity_(from.send_identity_());
  }
  if (from.recv_identity_() != 0) {
    set_recv_identity_(from.recv_identity_());
  }
  if (from.split_file_name_().size() > 0) {

    split_file_name__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.split_file_name__);
  }
}

void RetrieveSplitFileRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetrieveSplitFileRequestMessage::CopyFrom(const RetrieveSplitFileRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetrieveSplitFileRequestMessage::IsInitialized() const {

  return true;
}

void RetrieveSplitFileRequestMessage::Swap(RetrieveSplitFileRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetrieveSplitFileRequestMessage::InternalSwap(RetrieveSplitFileRequestMessage* other) {
  std::swap(send_identity__, other->send_identity__);
  std::swap(recv_identity__, other->recv_identity__);
  split_file_name__.Swap(&other->split_file_name__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetrieveSplitFileRequestMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetrieveSplitFileRequestMessage_descriptor_;
  metadata.reflection = RetrieveSplitFileRequestMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RetrieveSplitFileRequestMessage

// optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
void RetrieveSplitFileRequestMessage::clear_send_identity_() {
  send_identity__ = 0;
}
 ::Imagine_MapReduce::Internal::Identity RetrieveSplitFileRequestMessage::send_identity_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.send_identity_)
  return static_cast< ::Imagine_MapReduce::Internal::Identity >(send_identity__);
}
 void RetrieveSplitFileRequestMessage::set_send_identity_(::Imagine_MapReduce::Internal::Identity value) {
  
  send_identity__ = value;
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.send_identity_)
}

// optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
void RetrieveSplitFileRequestMessage::clear_recv_identity_() {
  recv_identity__ = 0;
}
 ::Imagine_MapReduce::Internal::Identity RetrieveSplitFileRequestMessage::recv_identity_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.recv_identity_)
  return static_cast< ::Imagine_MapReduce::Internal::Identity >(recv_identity__);
}
 void RetrieveSplitFileRequestMessage::set_recv_identity_(::Imagine_MapReduce::Internal::Identity value) {
  
  recv_identity__ = value;
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.recv_identity_)
}

// optional string split_file_name_ = 3;
void RetrieveSplitFileRequestMessage::clear_split_file_name_() {
  split_file_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RetrieveSplitFileRequestMessage::split_file_name_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.split_file_name_)
  return split_file_name__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RetrieveSplitFileRequestMessage::set_split_file_name_(const ::std::string& value) {
  
  split_file_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.split_file_name_)
}
 void RetrieveSplitFileRequestMessage::set_split_file_name_(const char* value) {
  
  split_file_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.split_file_name_)
}
 void RetrieveSplitFileRequestMessage::set_split_file_name_(const char* value, size_t size) {
  
  split_file_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.split_file_name_)
}
 ::std::string* RetrieveSplitFileRequestMessage::mutable_split_file_name_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.split_file_name_)
  return split_file_name__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RetrieveSplitFileRequestMessage::release_split_file_name_() {
  // @@protoc_insertion_point(field_release:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.split_file_name_)
  
  return split_file_name__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RetrieveSplitFileRequestMessage::set_allocated_split_file_name_(::std::string* split_file_name_) {
  if (split_file_name_ != NULL) {
    
  } else {
    
  }
  split_file_name__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), split_file_name_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_MapReduce.Internal.RetrieveSplitFileRequestMessage.split_file_name_)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetrieveSplitFileResponseMessage::kSendIdentityFieldNumber;
const int RetrieveSplitFileResponseMessage::kRecvIdentityFieldNumber;
const int RetrieveSplitFileResponseMessage::kStatusFieldNumber;
const int RetrieveSplitFileResponseMessage::kSplitFileContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetrieveSplitFileResponseMessage::RetrieveSplitFileResponseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
}

void RetrieveSplitFileResponseMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RetrieveSplitFileResponseMessage::RetrieveSplitFileResponseMessage(const RetrieveSplitFileResponseMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
}

void RetrieveSplitFileResponseMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  send_identity__ = 0;
  recv_identity__ = 0;
  status__ = 0;
  split_file_content__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RetrieveSplitFileResponseMessage::~RetrieveSplitFileResponseMessage() {
  // @@protoc_insertion_point(destructor:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
  SharedDtor();
}

void RetrieveSplitFileResponseMessage::SharedDtor() {
  split_file_content__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RetrieveSplitFileResponseMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetrieveSplitFileResponseMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetrieveSplitFileResponseMessage_descriptor_;
}

const RetrieveSplitFileResponseMessage& RetrieveSplitFileResponseMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RetrieveSplitFileMessage_2eproto();
  return *default_instance_;
}

RetrieveSplitFileResponseMessage* RetrieveSplitFileResponseMessage::default_instance_ = NULL;

RetrieveSplitFileResponseMessage* RetrieveSplitFileResponseMessage::New(::google::protobuf::Arena* arena) const {
  RetrieveSplitFileResponseMessage* n = new RetrieveSplitFileResponseMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetrieveSplitFileResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RetrieveSplitFileResponseMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RetrieveSplitFileResponseMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(send_identity__, recv_identity__);
  status__ = 0;
  split_file_content__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool RetrieveSplitFileResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_send_identity_(static_cast< ::Imagine_MapReduce::Internal::Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_recv_identity_;
        break;
      }

      // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
      case 2: {
        if (tag == 16) {
         parse_recv_identity_:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_recv_identity_(static_cast< ::Imagine_MapReduce::Internal::Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status_;
        break;
      }

      // optional .Imagine_MapReduce.Internal.Status status_ = 3;
      case 3: {
        if (tag == 24) {
         parse_status_:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status_(static_cast< ::Imagine_MapReduce::Internal::Status >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_split_file_content_;
        break;
      }

      // optional string split_file_content_ = 4;
      case 4: {
        if (tag == 34) {
         parse_split_file_content_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_split_file_content_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->split_file_content_().data(), this->split_file_content_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.split_file_content_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
  return false;
#undef DO_
}

void RetrieveSplitFileResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
  // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->send_identity_(), output);
  }

  // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->recv_identity_(), output);
  }

  // optional .Imagine_MapReduce.Internal.Status status_ = 3;
  if (this->status_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status_(), output);
  }

  // optional string split_file_content_ = 4;
  if (this->split_file_content_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->split_file_content_().data(), this->split_file_content_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.split_file_content_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->split_file_content_(), output);
  }

  // @@protoc_insertion_point(serialize_end:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
}

::google::protobuf::uint8* RetrieveSplitFileResponseMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
  // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->send_identity_(), target);
  }

  // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->recv_identity_(), target);
  }

  // optional .Imagine_MapReduce.Internal.Status status_ = 3;
  if (this->status_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status_(), target);
  }

  // optional string split_file_content_ = 4;
  if (this->split_file_content_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->split_file_content_().data(), this->split_file_content_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.split_file_content_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->split_file_content_(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
  return target;
}

int RetrieveSplitFileResponseMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
  int total_size = 0;

  // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->send_identity_());
  }

  // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->recv_identity_());
  }

  // optional .Imagine_MapReduce.Internal.Status status_ = 3;
  if (this->status_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status_());
  }

  // optional string split_file_content_ = 4;
  if (this->split_file_content_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->split_file_content_());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetrieveSplitFileResponseMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RetrieveSplitFileResponseMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RetrieveSplitFileResponseMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
    MergeFrom(*source);
  }
}

void RetrieveSplitFileResponseMessage::MergeFrom(const RetrieveSplitFileResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.send_identity_() != 0) {
    set_send_identity_(from.send_identity_());
  }
  if (from.recv_identity_() != 0) {
    set_recv_identity_(from.recv_identity_());
  }
  if (from.status_() != 0) {
    set_status_(from.status_());
  }
  if (from.split_file_content_().size() > 0) {

    split_file_content__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.split_file_content__);
  }
}

void RetrieveSplitFileResponseMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetrieveSplitFileResponseMessage::CopyFrom(const RetrieveSplitFileResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetrieveSplitFileResponseMessage::IsInitialized() const {

  return true;
}

void RetrieveSplitFileResponseMessage::Swap(RetrieveSplitFileResponseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetrieveSplitFileResponseMessage::InternalSwap(RetrieveSplitFileResponseMessage* other) {
  std::swap(send_identity__, other->send_identity__);
  std::swap(recv_identity__, other->recv_identity__);
  std::swap(status__, other->status__);
  split_file_content__.Swap(&other->split_file_content__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetrieveSplitFileResponseMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetrieveSplitFileResponseMessage_descriptor_;
  metadata.reflection = RetrieveSplitFileResponseMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RetrieveSplitFileResponseMessage

// optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
void RetrieveSplitFileResponseMessage::clear_send_identity_() {
  send_identity__ = 0;
}
 ::Imagine_MapReduce::Internal::Identity RetrieveSplitFileResponseMessage::send_identity_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.send_identity_)
  return static_cast< ::Imagine_MapReduce::Internal::Identity >(send_identity__);
}
 void RetrieveSplitFileResponseMessage::set_send_identity_(::Imagine_MapReduce::Internal::Identity value) {
  
  send_identity__ = value;
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.send_identity_)
}

// optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
void RetrieveSplitFileResponseMessage::clear_recv_identity_() {
  recv_identity__ = 0;
}
 ::Imagine_MapReduce::Internal::Identity RetrieveSplitFileResponseMessage::recv_identity_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.recv_identity_)
  return static_cast< ::Imagine_MapReduce::Internal::Identity >(recv_identity__);
}
 void RetrieveSplitFileResponseMessage::set_recv_identity_(::Imagine_MapReduce::Internal::Identity value) {
  
  recv_identity__ = value;
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.recv_identity_)
}

// optional .Imagine_MapReduce.Internal.Status status_ = 3;
void RetrieveSplitFileResponseMessage::clear_status_() {
  status__ = 0;
}
 ::Imagine_MapReduce::Internal::Status RetrieveSplitFileResponseMessage::status_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.status_)
  return static_cast< ::Imagine_MapReduce::Internal::Status >(status__);
}
 void RetrieveSplitFileResponseMessage::set_status_(::Imagine_MapReduce::Internal::Status value) {
  
  status__ = value;
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.status_)
}

// optional string split_file_content_ = 4;
void RetrieveSplitFileResponseMessage::clear_split_file_content_() {
  split_file_content__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RetrieveSplitFileResponseMessage::split_file_content_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.split_file_content_)
  return split_file_content__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RetrieveSplitFileResponseMessage::set_split_file_content_(const ::std::string& value) {
  
  split_file_content__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.split_file_content_)
}
 void RetrieveSplitFileResponseMessage::set_split_file_content_(const char* value) {
  
  split_file_content__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.split_file_content_)
}
 void RetrieveSplitFileResponseMessage::set_split_file_content_(const char* value, size_t size) {
  
  split_file_content__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.split_file_content_)
}
 ::std::string* RetrieveSplitFileResponseMessage::mutable_split_file_content_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.split_file_content_)
  return split_file_content__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RetrieveSplitFileResponseMessage::release_split_file_content_() {
  // @@protoc_insertion_point(field_release:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.split_file_content_)
  
  return split_file_content__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RetrieveSplitFileResponseMessage::set_allocated_split_file_content_(::std::string* split_file_content_) {
  if (split_file_content_ != NULL) {
    
  } else {
    
  }
  split_file_content__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), split_file_content_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_MapReduce.Internal.RetrieveSplitFileResponseMessage.split_file_content_)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Internal
}  // namespace Imagine_MapReduce

// @@protoc_insertion_point(global_scope)
