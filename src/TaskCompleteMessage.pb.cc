// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TaskCompleteMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Imagine_MapReduce/TaskCompleteMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Imagine_MapReduce {
namespace Internal {

namespace {

const ::google::protobuf::Descriptor* TaskCompleteRequestMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskCompleteRequestMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskCompleteResponseMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskCompleteResponseMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_TaskCompleteMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_TaskCompleteMessage_2eproto() {
  protobuf_AddDesc_TaskCompleteMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "TaskCompleteMessage.proto");
  GOOGLE_CHECK(file != NULL);
  TaskCompleteRequestMessage_descriptor_ = file->message_type(0);
  static const int TaskCompleteRequestMessage_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteRequestMessage, send_identity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteRequestMessage, recv_identity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteRequestMessage, file_name__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteRequestMessage, split_id__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteRequestMessage, split_num__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteRequestMessage, listen_ip__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteRequestMessage, listen_port__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteRequestMessage, file_list__),
  };
  TaskCompleteRequestMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskCompleteRequestMessage_descriptor_,
      TaskCompleteRequestMessage::default_instance_,
      TaskCompleteRequestMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(TaskCompleteRequestMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteRequestMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteRequestMessage, _is_default_instance_));
  TaskCompleteResponseMessage_descriptor_ = file->message_type(1);
  static const int TaskCompleteResponseMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteResponseMessage, send_identity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteResponseMessage, recv_identity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteResponseMessage, status__),
  };
  TaskCompleteResponseMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskCompleteResponseMessage_descriptor_,
      TaskCompleteResponseMessage::default_instance_,
      TaskCompleteResponseMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(TaskCompleteResponseMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteResponseMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskCompleteResponseMessage, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_TaskCompleteMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskCompleteRequestMessage_descriptor_, &TaskCompleteRequestMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskCompleteResponseMessage_descriptor_, &TaskCompleteResponseMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_TaskCompleteMessage_2eproto() {
  delete TaskCompleteRequestMessage::default_instance_;
  delete TaskCompleteRequestMessage_reflection_;
  delete TaskCompleteResponseMessage::default_instance_;
  delete TaskCompleteResponseMessage_reflection_;
}

void protobuf_AddDesc_TaskCompleteMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_TaskCompleteMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Imagine_MapReduce::Internal::protobuf_AddDesc_InternalType_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031TaskCompleteMessage.proto\022\032Imagine_Map"
    "Reduce.Internal\032\022InternalType.proto\"\221\002\n\032"
    "TaskCompleteRequestMessage\022<\n\016send_ident"
    "ity_\030\001 \001(\0162$.Imagine_MapReduce.Internal."
    "Identity\022<\n\016recv_identity_\030\002 \001(\0162$.Imagi"
    "ne_MapReduce.Internal.Identity\022\022\n\nfile_n"
    "ame_\030\003 \001(\t\022\021\n\tsplit_id_\030\004 \001(\r\022\022\n\nsplit_n"
    "um_\030\005 \001(\r\022\022\n\nlisten_ip_\030\006 \001(\t\022\024\n\014listen_"
    "port_\030\007 \001(\t\022\022\n\nfile_list_\030\010 \003(\t\"\316\001\n\033Task"
    "CompleteResponseMessage\022<\n\016send_identity"
    "_\030\001 \001(\0162$.Imagine_MapReduce.Internal.Ide"
    "ntity\022<\n\016recv_identity_\030\002 \001(\0162$.Imagine_"
    "MapReduce.Internal.Identity\0223\n\007status_\030\003"
    " \001(\0162\".Imagine_MapReduce.Internal.Status"
    "b\006proto3", 568);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TaskCompleteMessage.proto", &protobuf_RegisterTypes);
  TaskCompleteRequestMessage::default_instance_ = new TaskCompleteRequestMessage();
  TaskCompleteResponseMessage::default_instance_ = new TaskCompleteResponseMessage();
  TaskCompleteRequestMessage::default_instance_->InitAsDefaultInstance();
  TaskCompleteResponseMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_TaskCompleteMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TaskCompleteMessage_2eproto {
  StaticDescriptorInitializer_TaskCompleteMessage_2eproto() {
    protobuf_AddDesc_TaskCompleteMessage_2eproto();
  }
} static_descriptor_initializer_TaskCompleteMessage_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskCompleteRequestMessage::kSendIdentityFieldNumber;
const int TaskCompleteRequestMessage::kRecvIdentityFieldNumber;
const int TaskCompleteRequestMessage::kFileNameFieldNumber;
const int TaskCompleteRequestMessage::kSplitIdFieldNumber;
const int TaskCompleteRequestMessage::kSplitNumFieldNumber;
const int TaskCompleteRequestMessage::kListenIpFieldNumber;
const int TaskCompleteRequestMessage::kListenPortFieldNumber;
const int TaskCompleteRequestMessage::kFileListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskCompleteRequestMessage::TaskCompleteRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
}

void TaskCompleteRequestMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TaskCompleteRequestMessage::TaskCompleteRequestMessage(const TaskCompleteRequestMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
}

void TaskCompleteRequestMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  send_identity__ = 0;
  recv_identity__ = 0;
  file_name__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  split_id__ = 0u;
  split_num__ = 0u;
  listen_ip__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listen_port__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TaskCompleteRequestMessage::~TaskCompleteRequestMessage() {
  // @@protoc_insertion_point(destructor:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
  SharedDtor();
}

void TaskCompleteRequestMessage::SharedDtor() {
  file_name__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listen_ip__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listen_port__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TaskCompleteRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskCompleteRequestMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskCompleteRequestMessage_descriptor_;
}

const TaskCompleteRequestMessage& TaskCompleteRequestMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TaskCompleteMessage_2eproto();
  return *default_instance_;
}

TaskCompleteRequestMessage* TaskCompleteRequestMessage::default_instance_ = NULL;

TaskCompleteRequestMessage* TaskCompleteRequestMessage::New(::google::protobuf::Arena* arena) const {
  TaskCompleteRequestMessage* n = new TaskCompleteRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskCompleteRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TaskCompleteRequestMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TaskCompleteRequestMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(send_identity__, recv_identity__);
  ZR_(split_id__, split_num__);
  file_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listen_ip__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listen_port__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  file_list__.Clear();
}

bool TaskCompleteRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_send_identity_(static_cast< ::Imagine_MapReduce::Internal::Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_recv_identity_;
        break;
      }

      // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
      case 2: {
        if (tag == 16) {
         parse_recv_identity_:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_recv_identity_(static_cast< ::Imagine_MapReduce::Internal::Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_file_name_;
        break;
      }

      // optional string file_name_ = 3;
      case 3: {
        if (tag == 26) {
         parse_file_name_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name_().data(), this->file_name_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_name_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_split_id_;
        break;
      }

      // optional uint32 split_id_ = 4;
      case 4: {
        if (tag == 32) {
         parse_split_id_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &split_id__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_split_num_;
        break;
      }

      // optional uint32 split_num_ = 5;
      case 5: {
        if (tag == 40) {
         parse_split_num_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &split_num__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_listen_ip_;
        break;
      }

      // optional string listen_ip_ = 6;
      case 6: {
        if (tag == 50) {
         parse_listen_ip_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listen_ip_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->listen_ip_().data(), this->listen_ip_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_ip_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_listen_port_;
        break;
      }

      // optional string listen_port_ = 7;
      case 7: {
        if (tag == 58) {
         parse_listen_port_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listen_port_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->listen_port_().data(), this->listen_port_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_port_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_file_list_;
        break;
      }

      // repeated string file_list_ = 8;
      case 8: {
        if (tag == 66) {
         parse_file_list_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_file_list_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_list_(this->file_list__size() - 1).data(),
            this->file_list_(this->file_list__size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_file_list_;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
  return false;
#undef DO_
}

void TaskCompleteRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
  // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->send_identity_(), output);
  }

  // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->recv_identity_(), output);
  }

  // optional string file_name_ = 3;
  if (this->file_name_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name_().data(), this->file_name_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_name_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name_(), output);
  }

  // optional uint32 split_id_ = 4;
  if (this->split_id_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->split_id_(), output);
  }

  // optional uint32 split_num_ = 5;
  if (this->split_num_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->split_num_(), output);
  }

  // optional string listen_ip_ = 6;
  if (this->listen_ip_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen_ip_().data(), this->listen_ip_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_ip_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->listen_ip_(), output);
  }

  // optional string listen_port_ = 7;
  if (this->listen_port_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen_port_().data(), this->listen_port_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_port_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->listen_port_(), output);
  }

  // repeated string file_list_ = 8;
  for (int i = 0; i < this->file_list__size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_list_(i).data(), this->file_list_(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->file_list_(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
}

::google::protobuf::uint8* TaskCompleteRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
  // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->send_identity_(), target);
  }

  // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->recv_identity_(), target);
  }

  // optional string file_name_ = 3;
  if (this->file_name_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name_().data(), this->file_name_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_name_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name_(), target);
  }

  // optional uint32 split_id_ = 4;
  if (this->split_id_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->split_id_(), target);
  }

  // optional uint32 split_num_ = 5;
  if (this->split_num_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->split_num_(), target);
  }

  // optional string listen_ip_ = 6;
  if (this->listen_ip_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen_ip_().data(), this->listen_ip_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_ip_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->listen_ip_(), target);
  }

  // optional string listen_port_ = 7;
  if (this->listen_port_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listen_port_().data(), this->listen_port_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_port_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->listen_port_(), target);
  }

  // repeated string file_list_ = 8;
  for (int i = 0; i < this->file_list__size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_list_(i).data(), this->file_list_(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->file_list_(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
  return target;
}

int TaskCompleteRequestMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
  int total_size = 0;

  // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->send_identity_());
  }

  // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->recv_identity_());
  }

  // optional string file_name_ = 3;
  if (this->file_name_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name_());
  }

  // optional uint32 split_id_ = 4;
  if (this->split_id_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->split_id_());
  }

  // optional uint32 split_num_ = 5;
  if (this->split_num_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->split_num_());
  }

  // optional string listen_ip_ = 6;
  if (this->listen_ip_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listen_ip_());
  }

  // optional string listen_port_ = 7;
  if (this->listen_port_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listen_port_());
  }

  // repeated string file_list_ = 8;
  total_size += 1 * this->file_list__size();
  for (int i = 0; i < this->file_list__size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->file_list_(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskCompleteRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TaskCompleteRequestMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskCompleteRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
    MergeFrom(*source);
  }
}

void TaskCompleteRequestMessage::MergeFrom(const TaskCompleteRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  file_list__.MergeFrom(from.file_list__);
  if (from.send_identity_() != 0) {
    set_send_identity_(from.send_identity_());
  }
  if (from.recv_identity_() != 0) {
    set_recv_identity_(from.recv_identity_());
  }
  if (from.file_name_().size() > 0) {

    file_name__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name__);
  }
  if (from.split_id_() != 0) {
    set_split_id_(from.split_id_());
  }
  if (from.split_num_() != 0) {
    set_split_num_(from.split_num_());
  }
  if (from.listen_ip_().size() > 0) {

    listen_ip__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listen_ip__);
  }
  if (from.listen_port_().size() > 0) {

    listen_port__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listen_port__);
  }
}

void TaskCompleteRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskCompleteRequestMessage::CopyFrom(const TaskCompleteRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Imagine_MapReduce.Internal.TaskCompleteRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskCompleteRequestMessage::IsInitialized() const {

  return true;
}

void TaskCompleteRequestMessage::Swap(TaskCompleteRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskCompleteRequestMessage::InternalSwap(TaskCompleteRequestMessage* other) {
  std::swap(send_identity__, other->send_identity__);
  std::swap(recv_identity__, other->recv_identity__);
  file_name__.Swap(&other->file_name__);
  std::swap(split_id__, other->split_id__);
  std::swap(split_num__, other->split_num__);
  listen_ip__.Swap(&other->listen_ip__);
  listen_port__.Swap(&other->listen_port__);
  file_list__.UnsafeArenaSwap(&other->file_list__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskCompleteRequestMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskCompleteRequestMessage_descriptor_;
  metadata.reflection = TaskCompleteRequestMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskCompleteRequestMessage

// optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
void TaskCompleteRequestMessage::clear_send_identity_() {
  send_identity__ = 0;
}
 ::Imagine_MapReduce::Internal::Identity TaskCompleteRequestMessage::send_identity_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.send_identity_)
  return static_cast< ::Imagine_MapReduce::Internal::Identity >(send_identity__);
}
 void TaskCompleteRequestMessage::set_send_identity_(::Imagine_MapReduce::Internal::Identity value) {
  
  send_identity__ = value;
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.send_identity_)
}

// optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
void TaskCompleteRequestMessage::clear_recv_identity_() {
  recv_identity__ = 0;
}
 ::Imagine_MapReduce::Internal::Identity TaskCompleteRequestMessage::recv_identity_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.recv_identity_)
  return static_cast< ::Imagine_MapReduce::Internal::Identity >(recv_identity__);
}
 void TaskCompleteRequestMessage::set_recv_identity_(::Imagine_MapReduce::Internal::Identity value) {
  
  recv_identity__ = value;
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.recv_identity_)
}

// optional string file_name_ = 3;
void TaskCompleteRequestMessage::clear_file_name_() {
  file_name__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TaskCompleteRequestMessage::file_name_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_name_)
  return file_name__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskCompleteRequestMessage::set_file_name_(const ::std::string& value) {
  
  file_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_name_)
}
 void TaskCompleteRequestMessage::set_file_name_(const char* value) {
  
  file_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_name_)
}
 void TaskCompleteRequestMessage::set_file_name_(const char* value, size_t size) {
  
  file_name__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_name_)
}
 ::std::string* TaskCompleteRequestMessage::mutable_file_name_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_name_)
  return file_name__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskCompleteRequestMessage::release_file_name_() {
  // @@protoc_insertion_point(field_release:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_name_)
  
  return file_name__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskCompleteRequestMessage::set_allocated_file_name_(::std::string* file_name_) {
  if (file_name_ != NULL) {
    
  } else {
    
  }
  file_name__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_name_)
}

// optional uint32 split_id_ = 4;
void TaskCompleteRequestMessage::clear_split_id_() {
  split_id__ = 0u;
}
 ::google::protobuf::uint32 TaskCompleteRequestMessage::split_id_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.split_id_)
  return split_id__;
}
 void TaskCompleteRequestMessage::set_split_id_(::google::protobuf::uint32 value) {
  
  split_id__ = value;
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.split_id_)
}

// optional uint32 split_num_ = 5;
void TaskCompleteRequestMessage::clear_split_num_() {
  split_num__ = 0u;
}
 ::google::protobuf::uint32 TaskCompleteRequestMessage::split_num_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.split_num_)
  return split_num__;
}
 void TaskCompleteRequestMessage::set_split_num_(::google::protobuf::uint32 value) {
  
  split_num__ = value;
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.split_num_)
}

// optional string listen_ip_ = 6;
void TaskCompleteRequestMessage::clear_listen_ip_() {
  listen_ip__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TaskCompleteRequestMessage::listen_ip_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_ip_)
  return listen_ip__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskCompleteRequestMessage::set_listen_ip_(const ::std::string& value) {
  
  listen_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_ip_)
}
 void TaskCompleteRequestMessage::set_listen_ip_(const char* value) {
  
  listen_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_ip_)
}
 void TaskCompleteRequestMessage::set_listen_ip_(const char* value, size_t size) {
  
  listen_ip__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_ip_)
}
 ::std::string* TaskCompleteRequestMessage::mutable_listen_ip_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_ip_)
  return listen_ip__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskCompleteRequestMessage::release_listen_ip_() {
  // @@protoc_insertion_point(field_release:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_ip_)
  
  return listen_ip__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskCompleteRequestMessage::set_allocated_listen_ip_(::std::string* listen_ip_) {
  if (listen_ip_ != NULL) {
    
  } else {
    
  }
  listen_ip__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listen_ip_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_ip_)
}

// optional string listen_port_ = 7;
void TaskCompleteRequestMessage::clear_listen_port_() {
  listen_port__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TaskCompleteRequestMessage::listen_port_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_port_)
  return listen_port__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskCompleteRequestMessage::set_listen_port_(const ::std::string& value) {
  
  listen_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_port_)
}
 void TaskCompleteRequestMessage::set_listen_port_(const char* value) {
  
  listen_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_port_)
}
 void TaskCompleteRequestMessage::set_listen_port_(const char* value, size_t size) {
  
  listen_port__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_port_)
}
 ::std::string* TaskCompleteRequestMessage::mutable_listen_port_() {
  
  // @@protoc_insertion_point(field_mutable:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_port_)
  return listen_port__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskCompleteRequestMessage::release_listen_port_() {
  // @@protoc_insertion_point(field_release:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_port_)
  
  return listen_port__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskCompleteRequestMessage::set_allocated_listen_port_(::std::string* listen_port_) {
  if (listen_port_ != NULL) {
    
  } else {
    
  }
  listen_port__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listen_port_);
  // @@protoc_insertion_point(field_set_allocated:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.listen_port_)
}

// repeated string file_list_ = 8;
int TaskCompleteRequestMessage::file_list__size() const {
  return file_list__.size();
}
void TaskCompleteRequestMessage::clear_file_list_() {
  file_list__.Clear();
}
 const ::std::string& TaskCompleteRequestMessage::file_list_(int index) const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_)
  return file_list__.Get(index);
}
 ::std::string* TaskCompleteRequestMessage::mutable_file_list_(int index) {
  // @@protoc_insertion_point(field_mutable:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_)
  return file_list__.Mutable(index);
}
 void TaskCompleteRequestMessage::set_file_list_(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_)
  file_list__.Mutable(index)->assign(value);
}
 void TaskCompleteRequestMessage::set_file_list_(int index, const char* value) {
  file_list__.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_)
}
 void TaskCompleteRequestMessage::set_file_list_(int index, const char* value, size_t size) {
  file_list__.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_)
}
 ::std::string* TaskCompleteRequestMessage::add_file_list_() {
  // @@protoc_insertion_point(field_add_mutable:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_)
  return file_list__.Add();
}
 void TaskCompleteRequestMessage::add_file_list_(const ::std::string& value) {
  file_list__.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_)
}
 void TaskCompleteRequestMessage::add_file_list_(const char* value) {
  file_list__.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_)
}
 void TaskCompleteRequestMessage::add_file_list_(const char* value, size_t size) {
  file_list__.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
TaskCompleteRequestMessage::file_list_() const {
  // @@protoc_insertion_point(field_list:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_)
  return file_list__;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
TaskCompleteRequestMessage::mutable_file_list_() {
  // @@protoc_insertion_point(field_mutable_list:Imagine_MapReduce.Internal.TaskCompleteRequestMessage.file_list_)
  return &file_list__;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskCompleteResponseMessage::kSendIdentityFieldNumber;
const int TaskCompleteResponseMessage::kRecvIdentityFieldNumber;
const int TaskCompleteResponseMessage::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskCompleteResponseMessage::TaskCompleteResponseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
}

void TaskCompleteResponseMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TaskCompleteResponseMessage::TaskCompleteResponseMessage(const TaskCompleteResponseMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
}

void TaskCompleteResponseMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  send_identity__ = 0;
  recv_identity__ = 0;
  status__ = 0;
}

TaskCompleteResponseMessage::~TaskCompleteResponseMessage() {
  // @@protoc_insertion_point(destructor:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
  SharedDtor();
}

void TaskCompleteResponseMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TaskCompleteResponseMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskCompleteResponseMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskCompleteResponseMessage_descriptor_;
}

const TaskCompleteResponseMessage& TaskCompleteResponseMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TaskCompleteMessage_2eproto();
  return *default_instance_;
}

TaskCompleteResponseMessage* TaskCompleteResponseMessage::default_instance_ = NULL;

TaskCompleteResponseMessage* TaskCompleteResponseMessage::New(::google::protobuf::Arena* arena) const {
  TaskCompleteResponseMessage* n = new TaskCompleteResponseMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskCompleteResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TaskCompleteResponseMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TaskCompleteResponseMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(send_identity__, status__);

#undef ZR_HELPER_
#undef ZR_

}

bool TaskCompleteResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_send_identity_(static_cast< ::Imagine_MapReduce::Internal::Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_recv_identity_;
        break;
      }

      // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
      case 2: {
        if (tag == 16) {
         parse_recv_identity_:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_recv_identity_(static_cast< ::Imagine_MapReduce::Internal::Identity >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status_;
        break;
      }

      // optional .Imagine_MapReduce.Internal.Status status_ = 3;
      case 3: {
        if (tag == 24) {
         parse_status_:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status_(static_cast< ::Imagine_MapReduce::Internal::Status >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
  return false;
#undef DO_
}

void TaskCompleteResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
  // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->send_identity_(), output);
  }

  // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->recv_identity_(), output);
  }

  // optional .Imagine_MapReduce.Internal.Status status_ = 3;
  if (this->status_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status_(), output);
  }

  // @@protoc_insertion_point(serialize_end:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
}

::google::protobuf::uint8* TaskCompleteResponseMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
  // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->send_identity_(), target);
  }

  // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->recv_identity_(), target);
  }

  // optional .Imagine_MapReduce.Internal.Status status_ = 3;
  if (this->status_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status_(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
  return target;
}

int TaskCompleteResponseMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
  int total_size = 0;

  // optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
  if (this->send_identity_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->send_identity_());
  }

  // optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
  if (this->recv_identity_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->recv_identity_());
  }

  // optional .Imagine_MapReduce.Internal.Status status_ = 3;
  if (this->status_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status_());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskCompleteResponseMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TaskCompleteResponseMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskCompleteResponseMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
    MergeFrom(*source);
  }
}

void TaskCompleteResponseMessage::MergeFrom(const TaskCompleteResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.send_identity_() != 0) {
    set_send_identity_(from.send_identity_());
  }
  if (from.recv_identity_() != 0) {
    set_recv_identity_(from.recv_identity_());
  }
  if (from.status_() != 0) {
    set_status_(from.status_());
  }
}

void TaskCompleteResponseMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskCompleteResponseMessage::CopyFrom(const TaskCompleteResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Imagine_MapReduce.Internal.TaskCompleteResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskCompleteResponseMessage::IsInitialized() const {

  return true;
}

void TaskCompleteResponseMessage::Swap(TaskCompleteResponseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskCompleteResponseMessage::InternalSwap(TaskCompleteResponseMessage* other) {
  std::swap(send_identity__, other->send_identity__);
  std::swap(recv_identity__, other->recv_identity__);
  std::swap(status__, other->status__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskCompleteResponseMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskCompleteResponseMessage_descriptor_;
  metadata.reflection = TaskCompleteResponseMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskCompleteResponseMessage

// optional .Imagine_MapReduce.Internal.Identity send_identity_ = 1;
void TaskCompleteResponseMessage::clear_send_identity_() {
  send_identity__ = 0;
}
 ::Imagine_MapReduce::Internal::Identity TaskCompleteResponseMessage::send_identity_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.TaskCompleteResponseMessage.send_identity_)
  return static_cast< ::Imagine_MapReduce::Internal::Identity >(send_identity__);
}
 void TaskCompleteResponseMessage::set_send_identity_(::Imagine_MapReduce::Internal::Identity value) {
  
  send_identity__ = value;
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.TaskCompleteResponseMessage.send_identity_)
}

// optional .Imagine_MapReduce.Internal.Identity recv_identity_ = 2;
void TaskCompleteResponseMessage::clear_recv_identity_() {
  recv_identity__ = 0;
}
 ::Imagine_MapReduce::Internal::Identity TaskCompleteResponseMessage::recv_identity_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.TaskCompleteResponseMessage.recv_identity_)
  return static_cast< ::Imagine_MapReduce::Internal::Identity >(recv_identity__);
}
 void TaskCompleteResponseMessage::set_recv_identity_(::Imagine_MapReduce::Internal::Identity value) {
  
  recv_identity__ = value;
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.TaskCompleteResponseMessage.recv_identity_)
}

// optional .Imagine_MapReduce.Internal.Status status_ = 3;
void TaskCompleteResponseMessage::clear_status_() {
  status__ = 0;
}
 ::Imagine_MapReduce::Internal::Status TaskCompleteResponseMessage::status_() const {
  // @@protoc_insertion_point(field_get:Imagine_MapReduce.Internal.TaskCompleteResponseMessage.status_)
  return static_cast< ::Imagine_MapReduce::Internal::Status >(status__);
}
 void TaskCompleteResponseMessage::set_status_(::Imagine_MapReduce::Internal::Status value) {
  
  status__ = value;
  // @@protoc_insertion_point(field_set:Imagine_MapReduce.Internal.TaskCompleteResponseMessage.status_)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Internal
}  // namespace Imagine_MapReduce

// @@protoc_insertion_point(global_scope)
